#
# KIM-API: An API for interatomic models
# Copyright (c) 2013--2022, Regents of the University of Minnesota.
# All rights reserved.
#
# Contributors:
#    Ryan S. Elliott
#    Ellad B. Tadmor
#
# SPDX-License-Identifier: LGPL-2.1-or-later
#
# This library is free software; you can redistribute it and/or
# modify it under the terms of the GNU Lesser General Public
# License as published by the Free Software Foundation; either
# version 2.1 of the License, or (at your option) any later version.
#
# This library is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# Lesser General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public License
# along with this library; if not, write to the Free Software Foundation,
# Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA
#

#
# Release: This file is part of the kim-api-2.4.1 package.
#


=== kim-api-2.4.1 =============== 15Apr2025 ====================================

* Fix base64-encode to conform to cmake MAKE_C_IDENTIFIER behavior.  This allows
  encoded files to have naems that start with a numeric digit.


=== kim-api-2.4.0 =============== 12Mar2025 ====================================

* Updated readthedocs settings

* Updated github actions settings

* Improvements to the collections management utility to improve error handling
  of web queries and to fix an issue with finding installed drivers in the CWD
  collection

* Refactor handlling of parameter files to use base64 encoding instead of the
  hex format of xxd (xxd is no longer a dependency for the package).  This
  allows for more efficient handling of large parameter files


=== kim-api-2.3.0 =============== 17Mar2022 ====================================


* Re-license from CDDL to LGPL-2.1-or-later

* Fixed bug in c bindings for KIM_Collections_GetDirectoryName()

* Transition from Travis CI to github actions

* Add partial_particle_energy computation to utility_forces_numer_deriv

* Fixes/Improvements to CMake build system


=== kim-api-2.2.1 =============== 13Dec2020 ====================================

* replace usage of localtime() with more secure localtime_r()

* Enable Github code scanning

* Refactor CI to move codecov support to centos docker CI and speedup macOS CI

* Fix build support for coverage

* Improvements and fixes in collections management

* Use CMake CACHE variables so kim items can override package settings

* Added discussion of standalone portable model CMakeLists.txt files to docs

* Eliminate a compiler warning

* Updates to support new version of fprettyify

* Refactor libkim-api.pc file for more standard support for relocatable
  behavior

* Update travis-ci badge to use .com url

* Implement more reliable method for bash scripts to find ORIGIN

* Fix bugs in handling of -DKIM_API_SYSTEM_*_DIR=":/dir/..." build options; Add
  CI testing for usage of these cases.

* Correct release date for 2.2.0 in this file (Dec -> Nov)


=== kim-api-2.2.0 =============== 18Nov2020 ====================================

* The kim-api now supports Windows.  Significant additions have been made to
  the code and CMakeLists.txt files to support building kim-api and items on
  Windows via Cygwin and MinGW; Build on Windows requires C++17.
  (Thanks to Alex Stukowski)

* kim-api is now "relocatable" after install.  When installed to a non-standard
  PREFIX (with the CMAKE_INSTALL_PREFIX CMake option) the entire install tree
  may be moved, after install, to a new location in the file system and
  everything should still work.  This uses the RPATH, ${ORIGIN}, and similar
  mechanisms and is functioning on Linux, macOS, and Windows.  (This is tested
  in the CI.)

* Added 'portable-model' utility which prints out an edn dictionary containing
  information about the features and properties of a portable model.  This
  includes the list of supported compute arguments and callbacks, the
  parameters that the model makes available at runtime, etc.  The utility can
  be found in the LIBEXEC install directory.

* Added Push/PopDefaultPrintFunction to KIM::Log interface to support Simulator
  specific logging behavior such as the need for MPI communication to the head
  node for I/O operations

* Portable Model parameter files are now guaranteed to all be found in a single
  subdirectory.  This provides uniform handling of parameter files for both
  Portable Models and Simulator Models.  New GetParameterFileDirectoryName()
  and GetParameterFileBasename() routines have been added and
  GetParameterFileName() has been deprecated in the KIM::ModelDriverCreate
  interface.  A new GetParameterFileBaseName() routine has been added and
  GetParameterFileName() has been deprecated in the KIM::SimulatorModel
  interface.

* Update documentation to point to new https://matsci.org discourse OpenKIM
  forum

* Switch to minimum version 3.10 for CMake

* Complete refactor of CMake build details to improve exported target support.
  This required an update to how kim-api items define their CMakeLists.txt
  files.  This version remains backward compatible with item CMakeLists.txt
  files from older versions, but support for these is deprecated and will be
  removed in v3.

* Added human readable CMake configuration summary log (also a detailed
  version) which is printed at the end of the cmake configuration step

* Added new documentation page describing CMakeLists.txt files for the various
  kim-api item types

* Added native CMake implementation of xxd processing which allows the package
  to be build on systems without the xxd executable

* The collections-management utility will now use curl if wget is not available
  on the system

* Added a user-agent string to wget/curl commands so downloads and queries may
  be identified as coming from the collections-management utility

* Improve debugging of collections-management behavior with new CM_VERBOSITY
  environment variable and added better error messages

* Full refactoring of travis-ci, docker, and testing implementation

* Added support for openSUSE, ubuntu, centos, and debian to testing via docker

* Added ubuntu_cmake310 to explicitly test build with CMake version 3.10

* Added MinGW travis-ci testing (Thanks to Alex Stukowski)

* Added unique build identifier to default name for config and user collection
  files

* Refactor and improve handling of deprecated identifiers in configuration file

* Check for and ignore empty kim standard metadata files

* Adopted the `fprettify` Fortran code formatter and reformat all Fortran code
  to conform to the kim-api settings (now in .fprettify.rc).  Added scripts to
  support git-commit hook

* Refactor #includes to satisfy include-what-you-use linter

* Refactor initialization of pointers as best practice

* Fix a bug in C language binding for SimulatorModel Interface

* Fix a bug associated with the edn-cpp use of exceptions

* Fix issues identified by Coverity Scan

* Various fixes and improvements

* Various documentation updates


=== kim-api-2.1.3 =============== 16Aug2019 ====================================

* Adjust kim_collections_module to work around gfortran <= 4.8 bug.

* Fix minor bug in collections-management.

* Improve backward compatibility support for ~/.kim-api/config file format.

* Fix to Fortran/C mapping of KIM_LENGTH_UNIT_BOHR.

* Fixes to Fortran documentation and cross-references.

* Added information/links to the top level README.md


=== kim-api-2.1.2 =============== 29Jul2019 ====================================

* Fixup Fortran kim_collections_module interfaces to be consistent with c/c++.

* Fixup collections-management for portabability to dash.

* Improve item-wrapper.cpp.in for more standard compliant MD, MO, SM behavior.

* Improve zsh completion install behavior.

* Fixup Fortran c_long communication and overflow behavior.

* Add missing testing of interface in examples/simulators/collections-example.

* Improve example/simulators to remove warnings.

* Fix bug in KIM::SimulatorModel::Create().


=== kim-api-2.1.1 =============== 24Jul2019 ====================================

* Refactor 'kim-api-collections-management list' code for performance.

* Update collections-management to use 'make -j2' for improved performance.

* Improve kim-api-collections-management handling of passwords for use with
  sudo.  Specifically, support reading of passwords with whitespace and other
  special characters.

* Add zsh support to activate/deactivate scripts & zsh completions.

* Fix c_long overflow (for i386 systems) bug in Fortran kim_collections_module.

* Rework 'kim-api-collections-management install xxx OpenKIM' behavior.  Now
  installs the latest official release archive found at
  https://s3.openkim.org/archives/collection/.  This also greatly reduces the
  total build and install time.

* Redefine/refactor KIM::Collections behavior for finding item names.
  Previously, a shared library file was found, opened, and checked for
  validity.  To significantly improve performance, now simply the existence of
  the shared library file is used to identify available item names.

* Redefine/refactor collections-management and collections-info to remove
  '--with-version' option.

* Fixup and improve Fortran example codes.

* Added reopology.org graphic of available binaries to README.md.


=== kim-api-2.1.0 =============== 16Jul2019 ====================================

* Added new KIM::SimulatorModel interface providing programatic support to
  simulators for packaging of parameter files, input commands, and metadata
  necessary to run a simulator's native potentials.

* Added new KIM::Collections interface (and the supporting extensible
  enumerations KIM::Collection and KIM::CollectionItemTypes) providing
  programatic access to the KIM API Collections and its configuration settings.
  (This included a refactor and removal of old_KIM_API_DIRS.*.)

* Convert from old 'models' to 'portable-models' nomenclature for KIM API
  collections, including environment variables, configuration file, etc.  (For
  backward compatibility, the old configuration file format is still accepted.)

* Added support for Metadata files to (internal) KIM::SharedLibrary and
  programatic access to these files from the new KIM::Collections interface.

* Automatically add standard openkim.org metadata files (kimspec.edn,
  kimprovenance.edn, and kimcite-*.bib) to an item's shared library if they
  exist.

* Significant documentation updates to describe the new interfaces as well as
  changing to the the Portable Model (PM) and Simulator Model (SM) terminology.

* Added explicit documentation of Fortran interfaces for routines called by the
  KIM API (ModelCreate, ModelDestroy, GetNeighborList, etc.).

* Added mention of "Toy Models" to documentation.

* Added data-type error checking for Portable Model parameter get/set routines;
  Thanks to Daniel Schopf.

* Bug fixes and improvements to kim-api-collections-management script

* Added support for Include-What-You-Use (IWYU).

* Added (internal) copy of edn-cpp parser for use with SMs.

* Updated existing examples as necessary and added SM example.

* Added new "unit-test" examples of simulators using the Collections and SM
  interfaces.

* Improvement to pkgconfig support; Thanks to Christoph Junghans.

* Added new tests to CI, based on INSTALL file.

* Updates create-package script and added run-cmds-from-install script.

* Added .clang-format-hook-ignore file and mechanism (specifically for edn-cpp).

* Updates to better support binary installation on various systems.

* Added CDDL headers to files that did not have them.


=== kim-api-2.0.2 =============== 28Mar2019 ====================================

* Transition from 'kim-api-v2' naming to 'kim-api' for better alignment with
  open source conventions

* Added a simulator model example

* Refactored support for simulator models: separated from models in collections.
  Updated collections-management utility appropriately

* Updated calls to scanf() for better security

* Refactored old_KIM_API_DIRS.cpp to remove calls to 'exit()'

* Added build options to set system collection directories

* Added support for colon-separated list of directories for user and system
  collections

* Added '--version' flag to utilities

* Update bash completion to work with old and new bash

* Improve robustness of creat-package script

* Updated badges to point to 'devel' branch & create-package to change to
  'master' branch for release commit

* Added coverity & codecov badges to README.md

* Added vX.Y.Z-git tags to git repo and updated create-package script

* Added NEWS file to Doxygen documentation & updated doxygen settings

* Improved version build metadata string using "git describe"

* Updated link flags for codecov


=== kim-api-v2-2.0.1 ============ 27Feb2019 ====================================

* Fix bug in KIM::SemVer::ParseSemVer()

* Various minor fixes to address issues identified by Coverity Scan

* Fix version string in libkim-api-v2.pc to conform to RPM schema

* Added advanced CMake options for compilers used to build items after install

* Added item install prefix CMake variables to cache; helps with packaging

* Remove dead code in top level CMakeLists.txt


=== kim-api-v2-2.0.0 ============ 06Feb2019 ====================================

* Update main documentation.

* Added function level documentation with cross-references and input/output
  argument descriptions.

* Added Known() member function to extensible enumerations.

* Extensible enumeration default constructors now create uninitialized objects.

* Rename C++ *.String() routines to *.ToString.

* Added 'recursive' to all Fortran routines (for better thread safety).

* Added support files for readthedocs.

* Additions and fixes for collections-management utility.

* Travis CI configuration updates.

* Avoid some compiler warnings from clang.

* Various CMake fixes/adjustments.

* Various bug fixes in api code.


=== kim-api-v2-2.0.0-beta.3 ===== 07Dec2018 ====================================

* Updated and added examples to work with and demonstrate api changes/additions

* Implemented new KIM::Model::IsRoutinePresent interface to facilitate
  backward compatibility

* Updated SpeciesName entries for recently renamed periodic table elements

* Added WriteParameterizedModel Routine and assoc. code

* Added Extension Routine to allow for non-standard extensions

* Added Push/Pop Default Verbosity to KIM::Log

* Changed Release default LogVerbosity to INFORMATION

* Added ctest test for items to check that shared libraries can be opened

* Improvements to Collections-Management behavior

* Removed unnecessary header files

* Updated travis.ci configuration

* Refactored some backend implementation to improve maintainability, including
  significant new KIM_SharedLibrarySchema interface

* Improvements to CMake build system

* Updated create-package script

* Updated documentation


=== kim-api-v2.0.0-beta.2 ======= 28Oct2018 ====================================

* CMake build and test replaces custom Makefiles; added travis, gitlab CI
  A big thank you to Richard Berger and Christoph Junghans for their major
  contribution in getting the KIM API package converted to CMake.

* Using standard pkg-config setup instead of custom kim-api-v2-build-config

* Major restructuring of the Fortran bindings.

* Make ModelRefresh and ModelComputeArgumentsDestroy functions optional

* Add Model routine and callback prototypes in KIM_Functions header

* Add a required unique name field for parameters.

* Refactoring of neighbor list hints.  The half-list hint had a fatal flaw
  which required its removal.

* Significant refactoring of the logging macros in C and C++.  Complete removal
  of all preprocessing for Fortran.

* Redesign of release and packaging script and process.

* Added a couple of new models that illustrate various features of the api.

* Removed v1 to v2 porting guide.

* "Summary of Differences Between kim-api-v1 and kim-api-v2" docs page now
  contains tables with a complete listing of all kim-api identifiers in all
  languages and their mappings between one-another.

* Complete update of documentation.  Rework and correct definition of
  partialVirial and partialParticleVirial.

* Added emacs cc-mode settings

* Added clang-format settings, scripts, and git-hooks for C/C++

* Complete review of C++, C, and Fortran bindings for consistency

* Many other small and not-so-small changes.


=== kim-api-v2.0.0-beta.1 ======= 07Jul2018 ====================================

* Fix memory leak and uninitialized variables id'ed by coverity scan.

* Update docs and porting guide for neighbor list hints changes.

* Implement neighbor list hints (paddingNeighbor & halfList); update examples.

* Add SetArgumentPointer(xxx * const ptr) to C++ bindings for consistency.

* Add C++ LennardJones_Ar stand-alone model example.

* Fix compatibility checking code in example simulators.

* Update LennardJones612 example to use 1/2 list short-circuit mechanism.

* Fix collections-info to set log verbosity to debug.

* Use NULL consistently to initialize pointers in implemenation code.


=== kim-api-v1.9.7 ============== 07Jul2018 ====================================

* Check for errors from mkdir() in KIM_API_DIRS.cpp (id'ed by coverity scan).

* Fix support for required-compute of forces in utility-forces-numer-deriv.

* Fix identifiers in bash-completions.

* Added --log option to CM 'list' command.

* Use fixed seed for random number generator in utility-forces-numer-deriv.


=== kim-api-v2.0.0-beta.0 ======= 26Jun2018 ====================================

* Added a 'Guide for porting content from KIM API v1 to v2' to documentation

* Documentation updates and improvements

* Implemented extensive error checking and logging within the API

* Separated Model object into ComputeArguments and Model

* Many refinements and corrections to the new API


=== kim-api-v1.9.6 ============== 26Jun2018 ====================================

* Updated INSTALL file

* Added 'install OpenKIM_with_history' and 'install --force' options to the
  collections-management utility

* Collections-management utility now cleanly handles an unaccessible openkim.org

* Fixed bugs and made improvements to build system


=== kim-api-v1.9.5 ============== 12May2018 ====================================

* Update build system to support parallel builds (make -j).

* Fixed bug in collections-management for "install OpenKIM" option.

* Update INSTALL file


=== kim-api-v1.9.4 ============== 09Apr2018 ====================================

* Added '--interactive' option to collections-management utility.

* Added Travis-CI support through GitHub.

* Fixed bugs in collections-management utility.

* Fixed bugs in build system.


=== kim-api-v1.9.3 ============== 10Feb2018 ====================================

* Major additions to options supported by the kim-api-v1-collections-management
  utility.  Added options include:

  - list --with-version
  - install CWD
  - install environment
  - reinstall
  - remove-all

  Additionally, items can now be installed from a source directory on the local
  file system.  Also, multiple items can be listed on a single command line.

* Added a kim-api-v1-activate/deactivate utilities (available when installed to
  non-standard locations).  These add/remove to PATH and setup the bash
  completions.

* Added bash completions for user utilities

* Added support for the sysconfdir variable to the build system

* Updated utilities to more closely follow docopt.org specifications.

* Model/Driver 'make install-*' now respect the DESTDIR environment variable.

* Added support for Model/Driver install to the environment collection.

* Add tracking of Parameterized Model parameter file file-names within the
  generated model shared library.

* Rename vc_* examples to utility_* to avoid confusion with new openkim.org
  Verification Checks.

* Various minor typo and bug fixes.


=== kim-api-v2.0.0-alpha.0 ====== 18Jan2018 ====================================

* Complete rewrite of the kim-api package.  Released as "alpha" to solicit
  feedback from the user community.  Changes (possibly incompatible) will be
  made based on user experience.

* Major changes are summarized below.

* NBCs have been eliminated.

* KIM descriptor files have been eliminated.

* A new memory management scheme has been adopted.

* The api is now much more consistent within each language (C++, C, Fortran)
  binding.

* Improved logging facilities and error messages.

* Added Doxygen generated documentation.  (See the docs for more details on
  this version of the kim-api and on the differences between v1 and v2.)


=== kim-api-v1.9.2 ============== 08Oct2017 ====================================

* Update scripts to use xz compressed tarballs (txz) instead of gz (tgz).  This
  is for compatibility with the recent removal of tgz support on openkim.org.


=== kim-api-v1.9.1 ============== 27Sep2017 ====================================

* Adjustment to build config flags to make cross-language compiling a bit more
  flexible

* Fix subtle Fortran implementation bug associated with non-short-circuit
  conditional fortran behavior

* Remove 'make install-set-default-to-v1' target and update INSTALL instructions
  No longer have kim-api-build-config, etc.  Now they explicitly include the
  major version number. For example, kim-api-v1-build-config

* Make some shell code more portable

* Fixed some other installation details

* Fixed missing semi-colon in makefile


=== kim-api-v1.9.0 ============== 09Sep2017 ====================================

* Added collections-management user utility to manage build and install
  of OpenKIM Models and Model Drivers

* Added support for "Simulator Models"

* Dramatically simplify build system by removing supported scenarios.
  + Removed static-link build option
  + Removed "in-place" build scenario
  + Added support and use of the libexec directory to distinguish between
    user executable utilities and program executable utilities

* Incorporate fix to configure script contributed by Christoph Junghans

* Fix minor bugs in KIM_API_DIRS


=== kim-api-v1.8.2 ============== 17Apr2017 ====================================

* Fixed issues reaised by Tobias Brink (this==NULL; and `find` portability)


=== kim-api-v1.8.1 ============== 28Mar2017 ====================================

* Added additional deprecations in prep. for kim-api-v2.0.0

* Fixed other minor bugs in create_package script and build-config.cpp

* Fixed bug in Makefile.ParameterizedModel

* Fixed formatting error in Makefiles created by build-config utility

* Fixed bug in ex_model_Ar_P_MLJ_CLUSTER_C example model


=== kim-api-v1.8.0 ============== 17Jan2017 ====================================

* Deprecated significatant features and methods in prep. for kim-api-v2.0.0

* Updated `build-config' utility with more flexible options

* Removed `KIM_LINK = dynamic-link' option of build system

* Modified/Fixed/Improved the configuration and build system

* Added `collections-info' utility for querying environment variables,
  user configuration files, and lists of models and model drivers in the
  collections.


=== kim-api-v1.7.3 ============== 02Jun2016 ====================================

* Added a `configure' script for setting up Makefile.KIM_Config

* Added support for environment-variable-collection

* Added support for user_config_file_dir_name setting

* Documentation update/improvements

* Minor improvements to error messages

* Added `make add-OpenKIM' feature

* Added `make help' feature

* Added release dates to NEWS file

* Bug fixs


=== kim-api-v1.7.2 ============== 25Jun2015 ====================================

* Updated copyright years in files

* Rewrite of INSTALL file to provide a significantly improved description and
  instructions for build and installation of the KIM API

* Fix error checking bug in ex_test_Ar_multiple_models Test

* Improve the build and install process to better follow standard conventions
  for library soname values.

* Increased the maximum number of species supported by the example Tests to 200

* Fixed bug in example Tests related to maximum number of supported species

* Updated 'make clean' so that it removes all old library files in the source
  directories

* Fixed default make target for Parameterized Models

* Fixed a bug in the installation process associated with the use of DESTDIR

* Fixed a regular expression error in the build system

* Fixed memory leak in internal KIM API code

* Added sanity check to make sure that the 'xxd' utility is available

* vc_forces_numer_deriv now outputs configuration energy

* Documentation updates


=== kim-api-v1.7.1 ============== 02Dec2014 ====================================

* Bug fix for build of parameterized Models

* Minor documentation update


=== kim-api-v1.7.0 ============== 21Nov2014 ====================================

* Use 'xxd' utility for encapsulation of KIM descriptor files and param. files

* Added LINKSOPATH variable to build system for advanced system install options

* Added KIM_API_get_kim_str_len() routine

* Fix inconsistencies in ex_test_Ar_multiple_models

* remove build system dependency on 'ed' program

* Update 'make add-*' mechanism to use permanent url's for openkim.org items

* Fix bugs and minor improvements to build system

* Minor improvements to error messages

* Updates to documentation


=== kim-api-v1.6.3 ============== 18Aug2014 ====================================

* Fixed install to recognize := and = in Makefiles

* Removed use of non-standard strtok_r()

* Fixes to ex_model_Cu_PF_Johnson & model_El_PF_Template.c

* Fixes build system


=== kim-api-v1.6.2 ============== 11Aug2014 ====================================

* Correct KIM_API_Versions in template ".kim" files

* Update make clean target for Model Drivers and Models

* All template ".kim" files now generated from "legos" in git repo


=== kim-api-v1.6.1 ============== 08Aug2014 ====================================

* Updates to Model Driver and Model template files (in docs/templates/)

* Changed the internal mechanism for handling parameter files to remove a
  security hole associated with the use of tmpnam().

* Revise kim.log entries to be more informative and clear

* Bug fixes in build system, examples, and build system

* Other small documentation and code improvements


=== kim-api-v1.6.0 ============== 28Jul2014 ====================================

* Documentation updates.

* Model Driver Template and training model examples are now generated from a
  single consistent "lego" file.  Training examples are not included in
  official release tarballs.

* Add SemVer version routines to the KIM API.  ".kim" files now require a
  KIM_API_Version line to indicate the Model/Simulator compatibility.

* Change terminology from "Particle Types" to "Particle Species" for clarity
  and uniformity with the rest of the OpenKIM project.  (See
  KIM_API_get_model_species(), and similar routines.)

* Changed KIM API routines that output strings.  This avoids output of arrays
  of strings, which are unnatural in C/C++ and allows for more natural handling
  of string arguments in Fortran. (See: KIM_API_get_NBC_method(),
  KIM_API_get_params(), and similar routines.)

* Simulators and OpenKIM Tests now should use the "kim-api-build-config"
  utility in order to obtain appropriate compiler and linker flags for building
  against the KIM API.

* Changed CCFLAGS to more standard CFLAGS Make variable.

* Build system now provides ability to download Model Drivers and Models
  directly from openkim.org.

* Change package name from "openkim-api" to "kim-api".

* Rename this file (CHANGELOG) to NEWS, to better follow convention.

* A complete restructuring of the package directory layout has been performed
  in order to conform to more standard practices and to better reflect the
  intended behavior and use of the package components.

* Model Drivers now specify the name of their ".kim" file template in their
  Makefile.  The conventional name for these files now ends in ".kim.tpl".

* Model ".kim" file name is now specified in the Makefile and can be anything
  the developer desires.

* Remove deprecated KIM_API_init() routine.

* Remove deprecated Fortran Cray pointer support.


=== openkim-api-v1.5.0 ========== 16Jul2014 ====================================

* Documentation updates, including an extensive discussion of the installation
  process in INSTALL.

* Update examples to use KIM_API_file_init() and name their ".kim" file
  "descriptor.kim" in accordance with the new convention of the openkim.org
  processing pipeline.

* Deprecate KIM_API_init() and add KIM_API_file_init() to replace it as the
  primary openkim.org Tests should initialize the KIM API and specify their KIM
  descriptor files.

* Portability fixes for the make system

* Move away from naming various files based on the item (Model Driver, Model,
  Test) name.  Instead establish standard names for each item type.

* Added Makefile.Version to provided the make system with version information
  and set policy (based on SemVer 2.0.0) for how, when, and why to update the
  version.

* Significant updates to the make system.  Primarily associated with
  installation of the KIM API to a system-wide location, and its use once
  installed there.


=== openkim-api-v1.4.1 ========== 19May2014 ====================================


* Added additional compiler flags to support differences between GCC and INTEL

* Fixed examples that used set_data when they should have used set_method.

* Added LDLIBS flag in split functionality of LDFLAGS variable more
  appropriately.  This is more inline with standard Makefile practice.

* Now 32Bit and 64Bit settings add -m32 and -m64 compiler flags automatically

* Added KIM_MAKE_VERBOSITY setting to Make system

* Updates to README, INSTALL, and Templates

* Make system improvements and fixes

* Added checks for known buggy compilers

* Updated and corrected documentation


=== openkim-api-v1.4.0 ========== 26Feb2014 ====================================


* Improvements to robustness and efficiency of MAKE_SYSTEM

* Updated copyright years in files

* Updated documentation to reflect new Fortran 2003 bindings

* Converted DOCS/TEMPLATES/ to Fortran 2003 bindings

* Made significant improvement to neighbor list handling in example Tests

* Made some minor improvements to example Models and Model Drivers

* Converted example Models, Model Drivers, and Tests to Fortran 2003 bindings

* DEPRECATED all Cray pointer bindings and associated code

* Added Fortran 2003 bindings


=== openkim-api-v1.3.1 ========== 20Jan2014 ====================================


* Fixes to make system to avoid undefined `directoryPATH()' symbol with INTEL
  compilers and CYGWIN systems

* Added notes to INSTALL for gun 4.4 and CYGWIN systems

* Fixes to make system to work with gnu make 3.81 (avoid segmentation faults)


=== openkim-api-v1.3.0 ========== 10Dec2013 ====================================


* change KIM_KEY_STRING_LENGTH to 128 (despite git log that says 257)

* Split .kim files and parameter files into chunks to stay under C++ supported
  string literal length.

* Fix for dynamic-link compile option

* Some minor code fixes/updates and documentation updates

* Updates to `make install'

* Fix bug in FCC example Tests

* Fix/Update Templates

* Fix a bug in Makefile.Test

* Added KIM_API_get_rank and KIM_API_get_rank_by_index functions


=== openkim-api-v1.2.3 ========== 15Nov2013 ====================================


* Fixed bugs in the KIM_API_string_init() function (discovered by Daniel Schopf)

* Fixed a memory leak in the api (patch provided by Tobias Brink)

* Moved `include "KIM_API_DIRS.h"' from KIM_API.h to KIM_API.cpp.  This ensures
  that this header file does not need to be installed by the `make install'
  command.

* Changes to Makefiles to improve portability (of `make uninstall')

* Some minor changes to api code to remove compiler warnings from some compilers


=== openkim-api-v1.2.2 ========== 17Sep2013 ====================================


* Improved speed of make system when many Models/Tests (and Drivers) exist

* Improved an aspect of the api's error checking/reporting


=== openkim-api-v1.2.1 ========== 21Jul2013 ====================================


* Reverted to gnu make v3.81 from v3.82 to better represent actual needs.


=== openkim-api-v1.2.0 ========== 12Jul2013 ====================================


* Documentation updates.

* Various bug fixes.

* Added support for searching ${HOME}/.kim/ and ./ for Models and Model Drivers
  when the package is installed via the `make install' command.

* Added install and uninstall targets to the Make system.

* Now the build system (in dynamic-load and dynamic-link modes) hides all
  symbols in the Model Driver and Model libraries except for the model_init()
  function and the Model's kim descriptor string.  This means that there is no
  need to worry about symbol clashes between Models, Model Drivers, or Tests.

* Implemented dynamic-load, dynamic-link, and static-link build options.

* Make system now provides only summary information on the build process.  This
  makes the progress easier to understand.  To see the actual build commands
  use `make -n'.

* Removed `integer*8' and changed `real' and `real*8' to `float' and `double'.

* Now use -g, -Wall, and -pedantic by default for all compilations.

* Changed model_init() function conventions to simplify the scheme.  This also
  resulted in the removal of the Model or Test name from the descriptor files.

* Added the openkim-api-descriptor-file-match utility.

* Completely rewrote and streamlined the openkim-api Make system

* Changed directory names from trailing `s' to trailing `S'.

* Updated example Tests and Models to use the new get/set method routines.

* Added `const' to api string parameters to avoid warnings in Models and Tests

* Added get/set method routines to properly transfer pointers to functions
  or methods via the api.

* Added support to examples for NEIGH_RVEC_H.

* Added the NEIGH_RVEC_H NBC method.

* Added ex_free_cluster_CLUSTER_memory F90 Test which manages its own memory.

* Added ex_model_Cu_PF_Johnson C pair-functional model and template.

* Updates and bug fixes in example Models.

* Bug fixes for vc_forces_numer_deriv and added vc_config_ener_forces and
  vc_forces_delta to the distribution.


=== openkim-api-v1.1.1 ========== 19Aug2012 ====================================


* Added run_forces_numer_deriv_for_all_models script that will run and
  summarize the results of vc_forces_numer_deriv for all available Models.

* Added vc_forces_numer_deriv "verification check" that can be used with any
  Model to check the consistency of its computed forces with a numerical
  derivative based on the Model's energy.

* Fixed a bug in the MI_OPBC_* support for ex_model_Ne_P_fastLJ

* Fixed a bug in the make system that occurred when using static linking that
  would cause some Models to be incorrectly identified as "unknown"

* ex_test_*_free_cluster and ex_test_*_free_cluster_stiff now support CLUSTER
  NBC (which means they work with ALL NBC methods)

* Documentation updates

* Updated 32/64 bit switching in Fortran code for easier maintenance

* Moved library compile flags to end of command line to make sure all libraries
  are correctly associated with the appropriate .so files

* Cleaned up ex_model_driver_P_* and ex_model_Ne_P_fastLJ to simplify memory
  management and PARAM_* handling


=== openkim-api-v1.1.0 ========== 12Jul2012 ====================================


* Documentation updates

* Introduced the use of THIS_FILE_NAME in Fortran examples instead of __FILE__.
  This allows for easily setting the value of THIS_FILE_NAME to something
  appropriate (short) when the default preprocessor value of __FILE__ is longer
  that 132 characters (the max line length for Fortran)

* Changed KIM standard time unit from `fs' to `ps' to be consistent with LAMMPS
  `metal' unit system

* Changed KIM_COMPUTE and KIM_NOT_COMPUTE to KIM_COMPUTE_TRUE and
  KIM_COMPUTE_FALSE, respectively

* Removed KIM_API_MAX_NEIGHBORS; the api no longer puts any restriction on the
  number of neighbors for an atom

* Updated api and examples to always `return' with an error code instead of
  `exit' or `stop'.  This allows the Test to handle errors and is a better
  convention for error handling

* Added KIM_STATUS_MODEL_UNSUPPORTED_CONFIGURATION for cases where a
  configuration is identified at run time as unsupported

* Removed requirement for a trailing `/' in environment variables (such as
  $KIM_DIR)

* Added make warning if `make' is invoked from a Model directory when static
  linking is being used.

* Added `make examples-force' target

* `make examples' only copies files; it no longer also compiles everything

* Changed all call-back interfaces (model_init, model_reinit, model_compute,
  model_destroy) to be consistent: integer functions (in Fortran speak).  Also
  updated examples and templates to conform to this new interface.

* Added get_model_partcl_typs() and get_test_partcl_type() service routines
  Removed get_partcl_types() routine.

* Added ability of a Model/Model Driver to set its particle type codes at
  runtime

* Added support for .kimignore files in MODELS, MODEL_DRIVERS, and TESTS
  directories

* Added `Temperature' to standard.kim for "temperature dependent" Models

* New Model Driver interface supports reading from any number of files (not
  strings)

* Support for 001-999 particle types in Model Drivers

* Use $(strip ) function to avoid difficult trailing space problem in make files

* Rearranged and simplify compiler settings files
  (KIM_API/*_compiler_settings.mk)

* Changed CPPLIBFLAG to LINKLIBFLAG in Make files to better represent its use

* Many improvements to Make-system portability

* Carriage returns are now striped from kim and parameter files during Make

* Improvements to the vc_forces_numer_deriv verification check

* Bug fixes for KIM_API_init() matching

* Significant clean-up/rearrangement of core api code


=== openkim-api-v1.0.1 ========== 25Feb2012 ====================================


* Bug fix to ex_model_Ne_P_fastLJ

* Bug fix to ex_model_Al_PF_ErcolessiAdams (and associated template file)

* Documentation updates


=== openkim-api-v1.0.0 ========== 22Feb2012 ====================================


* Moved all examples to EXAMPLES directory and added `make examples' target.

* Renamed all example Model Drivers, Models, and Tests.  Now have `ex_' prefix.

* Renamed nearly all API functions to improve readability and comprehension.

* Changed KIM_API_get_half_neigh and KIM_API_get_full_neigh to just
  KIM_API_get_neigh.

* Total re-work of unit handling for the API.

* Added KIM_API_model_info() function for Tests to use for discovering what a
  Model supports.

* Added KIM_API_getm_* and KIM_API_setm_* routines to get/set multiple arguments
  in one function call.

* Added KIM_API_sting_init() for use by Tests that generate their KIM descriptor
  file "on-the-fly".

* Added process_dEdr and process_dE2dr2 approach for calculating general
  properties.  Currently automatic support for `virial', `particleVirial', and
  `hessian' is available.

* Added "unsymmetric half neighbor lists" (numberContributingParticles).

* Added model/test buffers for use by Model and Test, respectively.

* Improvements in dynamic linking setup.

* Examples additions, improvements, and bug fixes.

* Bug fixes.


=== openkim-api-v0.2.0 ========== 15Sep2011 ====================================


* Updated documentation

* Added KIM_API_report_error() service function and updated all examples
  and templates to use this function.

* Added KIMstatus.h which contains definitions of KIM status codes.

* Added KIM_API_status_msg() service routine to return a string describing a
  given status code.

* Updated messages printed to kim.log file to be more informative.

* Model KIM descriptor files are now incorporated into the Model's binary
  library file.  This means that the file is no longer required at run time and
  that the Model must be recompiled after changes to the descriptor file.

* Added Model Driver Templates

* Added two Model Drivers and four Models based on the Model Drivers

* Removed example model_Ar_P_MMorse in favor of the Morse Driver and its Models

* Added support for Model Drivers

* Bug fixes


=== openkim-api-v0.1.2 ========== 22Aug2011 ====================================


* Fixed a number of bugs in the examples related to running on 64bit machines

* Fixed a bug in kim_api_get_nbc_method_f() related to running on 64bit
  machines


=== openkim-api-v0.1.1 ========== 16Aug2011 ====================================


* Fixed memory handling bug associated with the service functions
     KIM_API_get_listAtomTypes()
     KIM_API_get_listParams()
     KIM_API_get_listFreeParams()
     KIM_API_get_listFixedParams()
     KIM_API_get_NBC_method()

* Fixed bug in test_**_free_cluster.F90

* Renamed `README.git' to `README_GIT' to avoid confusion with the
  git convention that the extension `.git' refers to a bare repository


=== openkim-api-v0.1.0 ========== 08Aug2011 ====================================


* Added TEMPLATE files to help users create their own KIM Models.

* Added a number of example Models and Tests to help users understand how to
  implement their own openkim-api compliant codes.

* Added support for ATOM/PARTICLE types

* Added support for Models to publish their parameters

* Added support for Models to define a `reinit' function for use when their
  parameters are changed by a Test.

* Improved the Makefile system in general (although, more needs to be done)

* Added support for neighbor list and boundary conditions (NBC)

* Added support for dynamic linking

* Updated documentation

* Added documentation to the standard.kim file which now describes in detail
  the format and content of KIM descriptor files.

* Added README files to every directory.  These files provide a short
  (hopefully helpful) description of the contents of the directory)


=== openkim-api-v0.0.0 =========================================================


The initial release of the openkim-api package.  This was first made available
to participants at the Inaugural Openkim Workshop held in San Diego, CA on
Feb. 26-27, 2011.
